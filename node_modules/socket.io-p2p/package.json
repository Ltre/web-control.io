{
  "name": "socket.io-p2p",
  "description": "WebRTC data channel communication with a socket.io-like API",
  "version": "1.3.1",
  "author": {
    "name": "Tom Cartwright",
    "email": "tecartwright@gmail.com",
    "url": "http://tomcartwright.net"
  },
  "bugs": {
    "url": "https://github.com/tomcartwrightuk/socket.io-p2p/issues"
  },
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/tomcartwrightuk/socket.io-p2p.git"
  },
  "keywords": [
    "webrtc",
    "peer-to-peer"
  ],
  "dependencies": {
    "component-bind": "^1.0.0",
    "component-emitter": "^1.2.0",
    "debug": "^2.1.0",
    "extend.js": "0.0.1",
    "has-binary": "^0.1.5",
    "hat": "0.0.3",
    "simple-peer": "~5.11.0",
    "socket.io-p2p-parser": "tomcartwrightuk/socket.io-p2p-parser",
    "to-array": "^0.1.4",
    "webrtcsupport": "^2.1.2"
  },
  "devDependencies": {
    "expect": "^1.1.0",
    "expect.js": "^0.3.1",
    "inherits": "~2.0.1",
    "socket.io": "^1.3.5",
    "socket.io-client": "^1.3.5",
    "socket.io-p2p-server": "^1.1.0",
    "tape": "~3.0.0"
  },
  "scripts": {
    "test": "zuul -- test/index.js"
  },
  "readme": "Socket.io-p2p\n=============\n\nThis module provides a simple way to setup a WebRTC connection between peers and communicate using the [socket.io-protocol](https://github.com/Automattic/socket.io-protocol). It's uses socket.io to transport [signalling data](http://www.html5rocks.com/en/tutorials/webrtc/infrastructure/#what-is-signaling) in the background - connections are easy to establish. Socket.io is used as the default transport and the connection can be upgraded to use PeerConnection in clients that support WebRTC by setting `usePeerConnection` to `true`.\n\n## How to use\n\nCreate a socket connection, pass it to Socketiop2p. On the Client:\n\n```\nvar Socketiop2p = require('socket.io-p2p')\nvar io = require('socket.io-client')\nvar socket = io()\n\nvar p2psocket = new Socketiop2p({}, socket)\n\np2psocket.on('ready', function() {\n  p2psocket.usePeerConnection = true\n  p2psocket.emit('peer-obj', {peerId: peerId})\n})\n\n// This event will be triggered over socket transport until `usePeerConnection` is set to `true`\np2psocket.on('peer-msg', function(data) {\n  console.log(data)\n})\n\n```\n\nOn server, use the [socket.io-p2p-server](https://github.com/tomcartwrightuk/socket.io-p2p-server) to take care of signalling. All clients who support WebRTC data connections will exchange signalling data via the default `/` namespace.\n\n```\nvar server = require('http').createServer()\nvar io = require('socket.io')(server)\nvar p2pserver = require('socket.io-p2p-server').Server\nio.use(p2pserver)\n\nserver.listen(3030)\n\n```\n\nWebRTC Peer connections can also be established by exchanging signalling data witin a socket.io room. Do this by calling the `p2pserver` within the `connection` callback:\n\n```\n\nvar server = require('http').createServer()\nvar io = require('socket.io')(server)\nvar p2pserver = require('socket.io-p2p-server').Server\n\nserver.listen(3030)\n\nio.on('connection', function(socket) {\n  clients[socket.id] = socket\n  socket.join(roomName)\n  p2pserver(socket, null, room)\n})\n\n\n```\n\n## Roadmap of development\n\n- Support for packets containing multiple binary blobs - packets can only contain one blob in this version\n- Allow a peer to act as a relay between peers that don't support PeerConnection and those that do.\n\nPRs and issue reports are most welcome.\n",
  "readmeFilename": "README.md",
  "_id": "socket.io-p2p@1.3.1",
  "dist": {
    "shasum": "3be234b9ea6c0c7dd06ec51c50c304038f49de9c"
  },
  "_from": "socket.io-p2p@",
  "_resolved": "https://registry.npmjs.org/socket.io-p2p/-/socket.io-p2p-1.3.1.tgz"
}
